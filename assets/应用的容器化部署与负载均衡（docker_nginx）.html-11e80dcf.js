const e=JSON.parse('{"key":"v-43a7901c","path":"/java/serverCloud/docker/%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%88docker_nginx%EF%BC%89.html","title":"应用的容器化部署与负载均衡（docker+nginx）","lang":"zh-CN","frontmatter":{"title":"应用的容器化部署与负载均衡（docker+nginx）","icon":"edit","order":1,"date":"2023-03-06T00:00:00.000Z","author":"singularity","category":["容器化技术"],"star":8,"isOriginal":true,"tag":["云原生","docker","nginx"],"copyright":"singularity原创,未经作者同意谢绝转载","description":"应用容器化     应用容器化，不去看网络上通篇八股，笔者个人认为就是将一个应用放到一个能支撑它正常运行的环境中，这个环境可移植，可重复利用。则这个环境就可以理解为容器。     应用容器化的意义在于可以使应用在不同型号，不同内存大小，不同处理器的计算机上完美移植。无需再考虑繁复的环境配置以及应用部署。制作好镜像后，只需要运行一个容器即可，搭配镜像仓库，则只需要登录镜像仓库，即可方便快捷地将自己的应用部署在计算机上。     关于容器化的妙用不再赘述，笔者在此处也不过多叙述容器化的原理。此处引用docker容器技术，docker的妙处无以言表，不过多嘴一句，尽量上虚拟机的docker应用，docker的桌面级应用docker desktop只能说又大又烂，慎用。此处笔者电脑为m1芯片，安装不了centos7，因此使用docker desktop。","head":[["meta",{"property":"og:url","content":"https://singular9862.github.io/java/serverCloud/docker/%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%88docker_nginx%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"singularity"}],["meta",{"property":"og:title","content":"应用的容器化部署与负载均衡（docker+nginx）"}],["meta",{"property":"og:description","content":"应用容器化     应用容器化，不去看网络上通篇八股，笔者个人认为就是将一个应用放到一个能支撑它正常运行的环境中，这个环境可移植，可重复利用。则这个环境就可以理解为容器。     应用容器化的意义在于可以使应用在不同型号，不同内存大小，不同处理器的计算机上完美移植。无需再考虑繁复的环境配置以及应用部署。制作好镜像后，只需要运行一个容器即可，搭配镜像仓库，则只需要登录镜像仓库，即可方便快捷地将自己的应用部署在计算机上。     关于容器化的妙用不再赘述，笔者在此处也不过多叙述容器化的原理。此处引用docker容器技术，docker的妙处无以言表，不过多嘴一句，尽量上虚拟机的docker应用，docker的桌面级应用docker desktop只能说又大又烂，慎用。此处笔者电脑为m1芯片，安装不了centos7，因此使用docker desktop。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"singularity"}],["meta",{"property":"article:tag","content":"云原生"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:published_time","content":"2023-03-06T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"应用的容器化部署与负载均衡（docker+nginx）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-06T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"singularity\\"}]}"]]},"headers":[{"level":2,"title":"应用容器化","slug":"应用容器化","link":"#应用容器化","children":[]},{"level":2,"title":"应用构建镜像并运行容器","slug":"应用构建镜像并运行容器","link":"#应用构建镜像并运行容器","children":[]},{"level":2,"title":"nginx做负载均衡","slug":"nginx做负载均衡","link":"#nginx做负载均衡","children":[]}],"git":{},"readingTime":{"minutes":4.11,"words":1232},"filePathRelative":"java/serverCloud/docker/应用的容器化部署与负载均衡（docker+nginx）.md","localizedDate":"2023年3月6日","excerpt":"<hr>\\n<h2> 应用容器化</h2>\\n<hr>\\n<p>    应用容器化，不去看网络上通篇八股，笔者个人认为就是将一个应用放到一个能支撑它正常运行的环境中，这个环境可移植，可重复利用。则这个环境就可以理解为容器。<br>\\n    应用容器化的意义在于可以使应用在不同型号，不同内存大小，不同处理器的计算机上完美移植。无需再考虑繁复的环境配置以及应用部署。制作好镜像后，只需要运行一个容器即可，搭配镜像仓库，则只需要登录镜像仓库，即可方便快捷地将自己的应用部署在计算机上。<br>\\n    关于容器化的妙用不再赘述，笔者在此处也不过多叙述容器化的原理。此处引用docker容器技术，docker的妙处无以言表，不过多嘴一句，尽量上虚拟机的docker应用，docker的桌面级应用docker desktop只能说又大又烂，慎用。此处笔者电脑为m1芯片，安装不了centos7，因此使用docker desktop。</p>","autoDesc":true}');export{e as data};
