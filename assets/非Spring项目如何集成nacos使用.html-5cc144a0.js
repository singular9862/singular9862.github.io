const n=JSON.parse('{"key":"v-3f958315","path":"/middleware/nacos/%E9%9D%9ESpring%E9%A1%B9%E7%9B%AE%E5%A6%82%E4%BD%95%E9%9B%86%E6%88%90nacos%E4%BD%BF%E7%94%A8.html","title":"非Spring项目如何集成nacos使用","lang":"zh-CN","frontmatter":{"title":"非Spring项目如何集成nacos使用","icon":"edit","order":1,"date":"2023-03-01T00:00:00.000Z","author":"singularity","category":["nacos"],"star":8,"isOriginal":true,"tag":["nacos","集成"],"copyright":"singularity原创,未经作者同意谢绝转载","description":"非Spring项目如何集成nacos使用 1.nacos是什么     根据nacos官方的介绍，nacos为Dynamic Naming and Configuration Service的首字母简称，是一个一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。     笔者个人对nacos的理解则是，spring cloud Alibaba解决方案下配置中心所使用的组件，主要是用来做服务注册与发现，配置管理。 2.nacos怎么用     nacos官方文档给出了nacos生态下与一些主流框架的集成方案。     但从非主流框架下的JavaWeb应用（例如OSP3.0）角度来说，在实际开发情况下，亦需要多环境开发测试及上线，就会出现多套代码不同配置文件的情况。可能该情况现有使用较多的解决方案是代码版本管理，但这会带来另外的问题。","head":[["meta",{"property":"og:url","content":"https://singular9862.github.io/middleware/nacos/%E9%9D%9ESpring%E9%A1%B9%E7%9B%AE%E5%A6%82%E4%BD%95%E9%9B%86%E6%88%90nacos%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"singularity"}],["meta",{"property":"og:title","content":"非Spring项目如何集成nacos使用"}],["meta",{"property":"og:description","content":"非Spring项目如何集成nacos使用 1.nacos是什么     根据nacos官方的介绍，nacos为Dynamic Naming and Configuration Service的首字母简称，是一个一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。     笔者个人对nacos的理解则是，spring cloud Alibaba解决方案下配置中心所使用的组件，主要是用来做服务注册与发现，配置管理。 2.nacos怎么用     nacos官方文档给出了nacos生态下与一些主流框架的集成方案。     但从非主流框架下的JavaWeb应用（例如OSP3.0）角度来说，在实际开发情况下，亦需要多环境开发测试及上线，就会出现多套代码不同配置文件的情况。可能该情况现有使用较多的解决方案是代码版本管理，但这会带来另外的问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"singularity"}],["meta",{"property":"article:tag","content":"nacos"}],["meta",{"property":"article:tag","content":"集成"}],["meta",{"property":"article:published_time","content":"2023-03-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"非Spring项目如何集成nacos使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"singularity\\"}]}"]]},"headers":[{"level":2,"title":"非Spring项目如何集成nacos使用","slug":"非spring项目如何集成nacos使用","link":"#非spring项目如何集成nacos使用","children":[{"level":3,"title":"1.nacos是什么","slug":"_1-nacos是什么","link":"#_1-nacos是什么","children":[]},{"level":3,"title":"4.非Spring项目与nacos","slug":"_4-非spring项目与nacos","link":"#_4-非spring项目与nacos","children":[]}]}],"git":{},"readingTime":{"minutes":7.05,"words":2116},"filePathRelative":"middleware/nacos/非Spring项目如何集成nacos使用.md","localizedDate":"2023年3月1日","excerpt":"<hr>\\n<h2> 非Spring项目如何集成nacos使用</h2>\\n<hr>\\n<h3> 1.nacos是什么</h3>\\n<p>    根据nacos官方的介绍，nacos为Dynamic Naming and Configuration Service的首字母简称，是一个一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。\\n    笔者个人对nacos的理解则是，spring cloud Alibaba解决方案下配置中心所使用的组件，主要是用来做服务注册与发现，配置管理。</p>\\n<h4> 2.nacos怎么用</h4>\\n<p>    nacos官方文档给出了nacos生态下与一些主流框架的集成方案。\\n\\n\\n    但从非主流框架下的JavaWeb应用（例如OSP3.0）角度来说，在实际开发情况下，亦需要多环境开发测试及上线，就会出现多套代码不同配置文件的情况。可能该情况现有使用较多的解决方案是代码版本管理，但这会带来另外的问题。</p>","autoDesc":true}');export{n as data};
