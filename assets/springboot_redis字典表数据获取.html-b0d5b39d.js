const t=JSON.parse('{"key":"v-4a044265","path":"/java/springboot/springboot_redis%E5%AD%97%E5%85%B8%E8%A1%A8%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96.html","title":"springboot+redis字典表数据获取","lang":"zh-CN","frontmatter":{"title":"springboot+redis字典表数据获取","icon":"edit","order":1,"date":"2021-07-18T00:00:00.000Z","author":"singularity","category":["springboot"],"star":5,"isOriginal":true,"tag":["springboot","layui","redis"],"copyright":"singularity原创,未经作者同意谢绝转载","description":"springboot+redis字典表数据获取，前端使用layui框架 前言 最终目的是使用redis存取字典表。这个案例就将使用到springboot+redis，但在此过程中遇见很多问题，逐个击破，最后实现功能。 准备工作 这里只是实现springboo集成redis，加上前端集成layui，如果单纯只是想使用springboot+layui的办法，在另一篇文章已经给出。 这里我的目的是从mysql数据库获取值，如果不想这么麻烦，也可以将所有事情直接交给前端，使用layui和layui的插件。在另一篇文章中也有相关说明。","head":[["meta",{"property":"og:url","content":"https://singular9862.github.io/java/springboot/springboot_redis%E5%AD%97%E5%85%B8%E8%A1%A8%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96.html"}],["meta",{"property":"og:site_name","content":"singularity"}],["meta",{"property":"og:title","content":"springboot+redis字典表数据获取"}],["meta",{"property":"og:description","content":"springboot+redis字典表数据获取，前端使用layui框架 前言 最终目的是使用redis存取字典表。这个案例就将使用到springboot+redis，但在此过程中遇见很多问题，逐个击破，最后实现功能。 准备工作 这里只是实现springboo集成redis，加上前端集成layui，如果单纯只是想使用springboot+layui的办法，在另一篇文章已经给出。 这里我的目的是从mysql数据库获取值，如果不想这么麻烦，也可以将所有事情直接交给前端，使用layui和layui的插件。在另一篇文章中也有相关说明。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"singularity"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"layui"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:published_time","content":"2021-07-18T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"springboot+redis字典表数据获取\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-18T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"singularity\\"}]}"]]},"headers":[{"level":2,"title":"springboot+redis字典表数据获取，前端使用layui框架","slug":"springboot-redis字典表数据获取-前端使用layui框架","link":"#springboot-redis字典表数据获取-前端使用layui框架","children":[]}],"git":{},"readingTime":{"minutes":4.79,"words":1437},"filePathRelative":"java/springboot/springboot+redis字典表数据获取.md","localizedDate":"2021年7月18日","excerpt":"<hr>\\n<h2> springboot+redis字典表数据获取，前端使用layui框架</h2>\\n<h4> 前言</h4>\\n<p>最终目的是使用redis存取字典表。这个案例就将使用到springboot+redis，但在此过程中遇见很多问题，逐个击破，最后实现功能。</p>\\n<h4> 准备工作</h4>\\n<p>这里只是实现springboo集成redis，加上前端集成layui，如果单纯只是想使用springboot+layui的办法，在另一篇文章已经给出。</p>\\n<p>这里我的目的是从mysql数据库获取值，如果不想这么麻烦，也可以将所有事情直接交给前端，使用layui和layui的插件。在另一篇文章中也有相关说明。</p>","autoDesc":true}');export{t as data};
