const n=JSON.parse(`{"key":"v-1f420a3c","path":"/Python/utils/%E5%B8%B8%E7%94%A8python%E8%84%9A%E6%9C%AC%EF%BC%88%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86%EF%BC%89.html","title":"常用python脚本（文档处理）","lang":"zh-CN","frontmatter":{"title":"常用python脚本（文档处理）","icon":"python","order":1,"date":"2023-03-01T00:00:00.000Z","author":"singularity","category":["python"],"star":1,"isOriginal":true,"tag":["python"],"copyright":"singularity原创,未经作者同意谢绝转载","description":"pdf转txt import PyPDF2 def coverPDFToTxt(pdf_file_path=None, word_file_path=None): # 打开pdf文件 pdf_file = open(pdf_file_path, 'rb') # 创建PDF对象 pdf_reader = PyPDF2.PdfReader(pdf_file) # 获得PDF中页面数 pages = len(pdf_reader.pages) # 创建一个空字符串来保存TXT文本 text = \\"\\" # 循环遍历每一页，将文本添加到text字符串中 for i in range(pages): page = pdf_reader.pages[i] text += page.extract_text() # 关闭PDF文件 pdf_file.close() # 将文本写入TXT文件 with open(word_file_path, 'w', encoding='utf-8') as file: file.write(text) if __name__ == '__main__': coverPDFToTxt('d.pdf','d.txt')","head":[["meta",{"property":"og:url","content":"https://singular9862.github.io/Python/utils/%E5%B8%B8%E7%94%A8python%E8%84%9A%E6%9C%AC%EF%BC%88%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"singularity"}],["meta",{"property":"og:title","content":"常用python脚本（文档处理）"}],["meta",{"property":"og:description","content":"pdf转txt import PyPDF2 def coverPDFToTxt(pdf_file_path=None, word_file_path=None): # 打开pdf文件 pdf_file = open(pdf_file_path, 'rb') # 创建PDF对象 pdf_reader = PyPDF2.PdfReader(pdf_file) # 获得PDF中页面数 pages = len(pdf_reader.pages) # 创建一个空字符串来保存TXT文本 text = \\"\\" # 循环遍历每一页，将文本添加到text字符串中 for i in range(pages): page = pdf_reader.pages[i] text += page.extract_text() # 关闭PDF文件 pdf_file.close() # 将文本写入TXT文件 with open(word_file_path, 'w', encoding='utf-8') as file: file.write(text) if __name__ == '__main__': coverPDFToTxt('d.pdf','d.txt')"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"singularity"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:published_time","content":"2023-03-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用python脚本（文档处理）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"singularity\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.74,"words":221},"filePathRelative":"Python/utils/常用python脚本（文档处理）.md","localizedDate":"2023年3月1日","excerpt":"<h4> pdf转txt</h4>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> PyPDF2\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">coverPDFToTxt</span><span class=\\"token punctuation\\">(</span>pdf_file_path<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span> word_file_path<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\"># 打开pdf文件</span>\\n    pdf_file <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>pdf_file_path<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'rb'</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># 创建PDF对象</span>\\n    pdf_reader <span class=\\"token operator\\">=</span> PyPDF2<span class=\\"token punctuation\\">.</span>PdfReader<span class=\\"token punctuation\\">(</span>pdf_file<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># 获得PDF中页面数</span>\\n    pages <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>pdf_reader<span class=\\"token punctuation\\">.</span>pages<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># 创建一个空字符串来保存TXT文本</span>\\n    text <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span>\\n\\n    <span class=\\"token comment\\"># 循环遍历每一页，将文本添加到text字符串中</span>\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>pages<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        page <span class=\\"token operator\\">=</span> pdf_reader<span class=\\"token punctuation\\">.</span>pages<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        text <span class=\\"token operator\\">+=</span> page<span class=\\"token punctuation\\">.</span>extract_text<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># 关闭PDF文件</span>\\n    pdf_file<span class=\\"token punctuation\\">.</span>close<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># 将文本写入TXT文件</span>\\n    <span class=\\"token keyword\\">with</span> <span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>word_file_path<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'w'</span><span class=\\"token punctuation\\">,</span> encoding<span class=\\"token operator\\">=</span><span class=\\"token string\\">'utf-8'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">.</span>write<span class=\\"token punctuation\\">(</span>text<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    coverPDFToTxt<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'d.pdf'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'d.txt'</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
